{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SREEHASA\\\\Desktop\\\\NOTESAPP\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n// import \"./styles.css\";\n\n/**\n * Home screen illustration with welcome text\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultScreen = /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"home-screen\",\n  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n    src: \"/illustration.svg\",\n    alt: \"Illustration\",\n    className: \"home-illustration\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Pocket Notes\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"subtitle\",\n    children: \"Send and receive messages without keeping your phone online.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"description\",\n    children: \"Use Pocket Notes on up to 4 linked devices and 1 mobile phone\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\nfunction App() {\n  _s();\n  // State for storing groups (e.g., [{ name: \"Work\", color: \"#F00\" }])\n  const [groups, setGroups] = useState(() => JSON.parse(localStorage.getItem(\"groups\")) || []);\n\n  // State for the currently active group\n  const [activeGroup, setActiveGroup] = useState(null);\n\n  // Notes are stored per group as an object: { [groupName]: [noteObjects] }\n  const [notes, setNotes] = useState(() => JSON.parse(localStorage.getItem(\"notes\")) || {});\n\n  // New note input field\n  const [newNote, setNewNote] = useState(\"\");\n\n  // Modal visibility for creating a new group\n  const [showModal, setShowModal] = useState(false);\n\n  // Input fields in modal\n  const [groupName, setGroupName] = useState(\"\");\n  const [groupColor, setGroupColor] = useState(\"#FFD700\");\n\n  // Save groups and notes to localStorage on every change\n  useEffect(() => {\n    localStorage.setItem(\"groups\", JSON.stringify(groups));\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [groups, notes]);\n\n  // Create a new group with the specified name and color\n  const handleCreateGroup = () => {\n    if (!groupName.trim()) return;\n    const newGroup = {\n      name: groupName.trim(),\n      color: groupColor\n    };\n    setGroups([...groups, newGroup]);\n    setShowModal(false);\n    setGroupName(\"\");\n    setGroupColor(\"#FFD700\");\n  };\n\n  // Send a new note to the current group\n  const handleSendNote = () => {\n    if (!newNote.trim()) return;\n    const groupNotes = notes[activeGroup.name] || [];\n    const updatedNotes = {\n      ...notes,\n      [activeGroup.name]: [...groupNotes, {\n        text: newNote.trim(),\n        timestamp: new Date().toLocaleString()\n      }]\n    };\n    setNotes(updatedNotes);\n    setNewNote(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"sidebar-title\",\n        children: \"Pocket Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Hello World\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), groups.map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `group-item ${(activeGroup === null || activeGroup === void 0 ? void 0 : activeGroup.name) === group.name ? \"active\" : \"\"}`,\n          onClick: () => setActiveGroup(group),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-avatar\",\n            style: {\n              backgroundColor: group.color\n            },\n            children: group.name.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"group-name\",\n            children: group.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-btn\",\n        onClick: () => setShowModal(true),\n        children: \"+ Create Notes Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"note-area\",\n      children: activeGroup ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"note-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-avatar\",\n            style: {\n              backgroundColor: activeGroup.color\n            },\n            children: activeGroup.name.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"note-title\",\n            children: activeGroup.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-list\",\n          children: (notes[activeGroup.name] || []).map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"note-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"note-text\",\n              children: note.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"note-timestamp\",\n              children: note.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"note-textarea\",\n            placeholder: \"Enter your text here...\",\n            value: newNote,\n            onChange: e => setNewNote(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send-btn\",\n            onClick: handleSendNote,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this) : defaultScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"modal-title\",\n          children: \"Create New Notes Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Group Name\",\n          className: \"modal-input\",\n          value: groupName,\n          onChange: e => setGroupName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          className: \"modal-color\",\n          value: groupColor,\n          onChange: e => setGroupColor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-create-btn\",\n          onClick: handleCreateGroup,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fjtJCUaADFcuR0X2oaVmN2V/C1s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","defaultScreen","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","App","_s","groups","setGroups","JSON","parse","localStorage","getItem","activeGroup","setActiveGroup","notes","setNotes","newNote","setNewNote","showModal","setShowModal","groupName","setGroupName","groupColor","setGroupColor","setItem","stringify","handleCreateGroup","trim","newGroup","name","color","handleSendNote","groupNotes","updatedNotes","text","timestamp","Date","toLocaleString","map","group","index","onClick","style","backgroundColor","charAt","toUpperCase","note","placeholder","value","onChange","e","target","stopPropagation","type","_c","$RefreshReg$"],"sources":["C:/Users/SREEHASA/Desktop/NOTESAPP/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import \"./styles.css\";\n\n/**\n * Home screen illustration with welcome text\n */\nconst defaultScreen = (\n  <div className=\"home-screen\">\n    <img src=\"/illustration.svg\" alt=\"Illustration\" className=\"home-illustration\" />\n    <h1>Pocket Notes</h1>\n    <p className=\"subtitle\">\n      Send and receive messages without keeping your phone online.\n    </p>\n    <p className=\"description\">\n      Use Pocket Notes on up to 4 linked devices and 1 mobile phone\n    </p>\n  </div>\n);\n\nfunction App() {\n  // State for storing groups (e.g., [{ name: \"Work\", color: \"#F00\" }])\n  const [groups, setGroups] = useState(() => JSON.parse(localStorage.getItem(\"groups\")) || []);\n\n  // State for the currently active group\n  const [activeGroup, setActiveGroup] = useState(null);\n\n  // Notes are stored per group as an object: { [groupName]: [noteObjects] }\n  const [notes, setNotes] = useState(() => JSON.parse(localStorage.getItem(\"notes\")) || {});\n\n  // New note input field\n  const [newNote, setNewNote] = useState(\"\");\n\n  // Modal visibility for creating a new group\n  const [showModal, setShowModal] = useState(false);\n\n  // Input fields in modal\n  const [groupName, setGroupName] = useState(\"\");\n  const [groupColor, setGroupColor] = useState(\"#FFD700\");\n\n  // Save groups and notes to localStorage on every change\n  useEffect(() => {\n    localStorage.setItem(\"groups\", JSON.stringify(groups));\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [groups, notes]);\n\n  // Create a new group with the specified name and color\n  const handleCreateGroup = () => {\n    if (!groupName.trim()) return;\n    const newGroup = { name: groupName.trim(), color: groupColor };\n    setGroups([...groups, newGroup]);\n    setShowModal(false);\n    setGroupName(\"\");\n    setGroupColor(\"#FFD700\");\n  };\n\n  // Send a new note to the current group\n  const handleSendNote = () => {\n    if (!newNote.trim()) return;\n    const groupNotes = notes[activeGroup.name] || [];\n    const updatedNotes = {\n      ...notes,\n      [activeGroup.name]: [\n        ...groupNotes,\n        {\n          text: newNote.trim(),\n          timestamp: new Date().toLocaleString(),\n        },\n      ],\n    };\n    setNotes(updatedNotes);\n    setNewNote(\"\");\n  };\n\n  return (\n    <div className=\"app\">\n      {/* Sidebar: List of groups */}\n      <aside className=\"sidebar\">\n        <h2 className=\"sidebar-title\">Pocket Notes</h2>\n        <div className=\"group-list\">\n          <div>Hello World</div>\n          {groups.map((group, index) => (\n            <div\n              key={index}\n              className={`group-item ${activeGroup?.name === group.name ? \"active\" : \"\"}`}\n              onClick={() => setActiveGroup(group)}\n            >\n              <div\n                className=\"group-avatar\"\n                style={{ backgroundColor: group.color }}\n              >\n                {group.name.charAt(0).toUpperCase()}\n              </div>\n              <span className=\"group-name\">{group.name}</span>\n            </div>\n          ))}\n        </div>\n        <button className=\"create-btn\" onClick={() => setShowModal(true)}>\n          + Create Notes Group\n        </button>\n      </aside>\n\n      {/* Main Note Area */}\n      <main className=\"note-area\">\n        {activeGroup ? (\n          <div className=\"note-panel\">\n            <header className=\"note-header\">\n              <div\n                className=\"group-avatar\"\n                style={{ backgroundColor: activeGroup.color }}\n              >\n                {activeGroup.name.charAt(0).toUpperCase()}\n              </div>\n              <h3 className=\"note-title\">{activeGroup.name}</h3>\n            </header>\n\n            <div className=\"note-list\">\n              {(notes[activeGroup.name] || []).map((note, index) => (\n                <div key={index} className=\"note-card\">\n                  <p className=\"note-text\">{note.text}</p>\n                  <span className=\"note-timestamp\">{note.timestamp}</span>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"note-input\">\n              <textarea\n                className=\"note-textarea\"\n                placeholder=\"Enter your text here...\"\n                value={newNote}\n                onChange={(e) => setNewNote(e.target.value)}\n              ></textarea>\n              <button className=\"send-btn\" onClick={handleSendNote}>\n                Send\n              </button>\n            </div>\n          </div>\n        ) : (\n          defaultScreen\n        )}\n      </main>\n\n      {/* Modal for creating new group */}\n      {showModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowModal(false)}>\n          <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\n            <h3 className=\"modal-title\">Create New Notes Group</h3>\n            <input\n              type=\"text\"\n              placeholder=\"Group Name\"\n              className=\"modal-input\"\n              value={groupName}\n              onChange={(e) => setGroupName(e.target.value)}\n            />\n            <input\n              type=\"color\"\n              className=\"modal-color\"\n              value={groupColor}\n              onChange={(e) => setGroupColor(e.target.value)}\n            />\n            <button className=\"modal-create-btn\" onClick={handleCreateGroup}>\n              Create\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}